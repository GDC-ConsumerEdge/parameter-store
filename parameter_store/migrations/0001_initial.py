# Generated by Django 5.1.2 on 2024-11-22 16:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='tag name')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClusterIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_id', models.CharField(max_length=30, verbose_name='Zone ID')),
                ('zone_name', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(max_length=30)),
                ('machine_project_id', models.CharField(max_length=30, verbose_name='Machine Project ID')),
                ('fleet_project_id', models.CharField(max_length=30, verbose_name='Fleet Project ID')),
                ('secrets_project_id', models.CharField(max_length=30)),
                ('node_count', models.IntegerField(default=3)),
                ('cluster_ipv4_cidr', models.CharField(max_length=18, verbose_name='Cluster IPv4 CIDR')),
                ('services_ipv4_cidr', models.CharField(max_length=18, verbose_name='Services IPv4 CIDR')),
                ('external_load_balancer_ipv4_address_pools', models.CharField(max_length=180, verbose_name='External Load Balancer IPv4 Address Pools')),
                ('sync_repo', models.CharField(help_text='This is the full URL to a Git repository', max_length=128)),
                ('sync_branch', models.CharField(default='main', help_text='For; example: "main" or "master"', max_length=50)),
                ('sync_dir', models.CharField(default='hydrated/clusters/None', max_length=50)),
                ('git_token_secret_manager_name', models.CharField(max_length=255)),
                ('cluster_version', models.CharField(help_text='This is the GDCC control plane version, i.e. "1.7.1"', max_length=30)),
                ('maintenance_window_start', models.DateTimeField(blank=True, null=True)),
                ('maintenance_window_end', models.DateTimeField(blank=True, null=True)),
                ('maintenance_window_recurrence', models.CharField(blank=True, max_length=128, null=True)),
                ('subnet_vlans', models.CharField(max_length=128, null=True)),
                ('recreate_on_delete', models.BooleanField(default=False)),
                ('cluster', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='parameter_store.cluster')),
            ],
            options={
                'verbose_name': 'Cluster Intent Data',
                'verbose_name_plural': 'Cluster Intent Data',
            },
        ),
        migrations.AddField(
            model_name='cluster',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='parameter_store.group'),
        ),
        migrations.CreateModel(
            name='ClusterTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parameter_store.cluster')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parameter_store.tag')),
            ],
            options={
                'verbose_name': 'Cluster Tag',
                'verbose_name_plural': 'Cluster Tags',
            },
        ),
        migrations.AddField(
            model_name='cluster',
            name='tags',
            field=models.ManyToManyField(related_name='clusters', through='parameter_store.ClusterTag', to='parameter_store.tag'),
        ),
        migrations.CreateModel(
            name='ClusterFleetLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=63)),
                ('value', models.CharField(max_length=63)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parameter_store.cluster')),
            ],
            options={
                'verbose_name': 'Cluster Fleet Label',
                'verbose_name_plural': 'Cluster Fleet Labels',
                'constraints': [models.UniqueConstraint(fields=('cluster', 'key'), name='unique_cluster_key')],
            },
        ),
    ]
